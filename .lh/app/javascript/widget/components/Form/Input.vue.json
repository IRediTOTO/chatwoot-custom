{
    "sourceFile": "app/javascript/widget/components/Form/Input.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1718744650369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1718744650369,
            "name": "Commit-0",
            "content": "<template>\n  <label class=\"block\">\n    <div\n      v-if=\"label\"\n      class=\"mb-2 text-xs leading-3 font-medium\"\n      :class=\"labelClass\"\n    >\n      {{ label }}\n    </div>\n    <input\n      :type=\"type\"\n      class=\"border rounded w-full py-2 px-3 leading-tight outline-none\"\n      :class=\"inputHasError\"\n      :placeholder=\"placeholder\"\n      :value=\"value\"\n      :readonly=\"readOnly\"\n      @change=\"onChange\"\n    />\n    <div v-if=\"error\" class=\"text-red-400 mt-2 text-xs leading-3 font-medium\">\n      {{ error }}\n    </div>\n    <div\n      v-if=\"!error && helpText\"\n      class=\"text-red-400 mt-2 text-xs leading-3 font-medium\"\n    >\n      {{ helpText }}\n    </div>\n  </label>\n</template>\n<script>\nimport darkModeMixin from 'widget/mixins/darkModeMixin';\nexport default {\n  mixins: [darkModeMixin],\n  props: {\n    label: {\n      type: String,\n      default: '',\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    value: {\n      type: [String, Number],\n      required: true,\n    },\n    error: {\n      type: String,\n      default: '',\n    },\n    helpText: {\n      type: String,\n      default: '',\n    },\n    readOnly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    labelClass() {\n      return this.error\n        ? `text-red-400 ${this.$dm('text-black-800', 'dark:text-slate-50')}`\n        : `text-black-800 ${this.$dm('text-black-800', 'dark:text-slate-50')}`;\n    },\n    isInputDarkOrLightMode() {\n      return `${this.$dm('bg-white', 'dark:bg-slate-600')} ${this.$dm(\n        'text-slate-700',\n        'dark:text-slate-50'\n      )}`;\n    },\n    inputBorderColor() {\n      return `${this.$dm('border-black-200', 'dark:border-black-500')}`;\n    },\n    inputHasError() {\n      return this.error\n        ? `border-red-200 hover:border-red-300 focus:border-red-300 ${this.isInputDarkOrLightMode}`\n        : `hover:border-black-300 focus:border-black-300 ${this.isInputDarkOrLightMode} ${this.inputBorderColor}`;\n    },\n  },\n  methods: {\n    onChange(event) {\n      this.$emit('input', event.target.value);\n    },\n  },\n};\n</script>\n"
        }
    ]
}